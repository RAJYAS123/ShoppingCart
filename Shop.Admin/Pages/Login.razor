@page "/login"
@using Shop.DataModels.CustomModels;
@using Shop.Admin.Services;
@inject IAdminPanelService adminPanelService;
@inject NavigationManager Navmanger;
@inject ProtectedSessionStorage sessionStorage;


<style>
    .loginBox {
        font-family: 'Open Sans',sans-serif;
        width: 100%;
        text-align: center;
        margin: 0 auto 0 auto;
        margin: 20px 0px 20px 0px;
    }

    p {
        font-size: 12px;
        text-decoration: none;
        color: #ffffff;
    }

    h1 {
        font-size: 1.5em;
        color: #525252;
    }

    .box {
        background: white;
        width: 350px;
        border-radius: 6px;
        margin: 0 auto 0 auto;
        padding: 0px 0px 70px 0px;
        border: #f5f542 4px solid;
        height: 300px;
    }

    .email {
        border: #ccc 1px solid;
        border-bottom: #ccc 2px solid;
        padding: 8px;
        color: #525252;
        width: 250px;
        background: #ffffff;
        margin-top: 10px;
        font-size: 1em;
        border-radius: 4px;
    }

    .password {
        border-radius: 4px;
        background: #ecf0f1;
        border: #ccc 1px solid;
        padding: 8px;
        width: 250px;
        font-size: 1em;
    }

    .btn {
        background: #2ecc71;
        width: 125px;
        padding-bottom: 5px;
        padding-top: 5px;
        color: white;
        border-radius: 4px;
        border: #27ae60 1px solid;
        margin-top: 20px;
        margin-bottom: 20px;
        float: left;
        margin-left: 16px;
        font-weight: 800;
        font-size: 0.8em;
    }

        .btn:hover {
            background: #2CC06B;
        }

    #btn2 {
        float: left;
        background: #3498db;
        width: 125px;
        padding-top: 5px;
        padding-bottom: 5px;
        color: white;
        border-radius: 4px;
        border: #2980b9 1px solid;
        margin-top: 20px;
        margin-bottom: 20px;
        margin-left: 10px;
        font-weight: 800;
        font-size: 0.8em;
    }

        #btn2:hover {
            background: #3594D2;
        }
</style>

<div style="min-height:400px;">
    <div class="loginBox">
        <div class="box">
            <br />
            <h1>Admin Login</h1>
            @if (loginModel != null)
            {
                <EditForm Model="@loginModel" OnValidSubmit="Login_Click">
                    <DataAnnotationsValidator />
                    <input type="email" name="email" class="form-control " placeholder="email" @bind-value="loginModel.EmailId" />
                    <ValidationMessage For="@(()=>loginModel.EmailId)" />
                    <br />
                    <input type="password" name="password" class="form-control " placeholder="password" @bind-value="loginModel.Password" />
                    <ValidationMessage For="@(()=>loginModel.Password)" />
                    <br /><br />
                    <input type="submit" class="btn btn-outline-primary" value="Login" />
                </EditForm>
            }
        </div>
    </div>
    <br /><br />
    <p style="color:#e52e50">
        <h4>@alertMessage</h4>
    </p>
</div>


@code
{
    [CascadingParameter]
    public EventCallback notify { get; set; }
    LoginModel loginModel { get; set; }
    public string alertMessage { get; set; }

    protected override Task OnInitializedAsync()
    {
        loginModel = new LoginModel();
        return base.OnInitializedAsync();
    }
    private async Task Login_Click()
    {
        var response = await adminPanelService.AdmidLogin(loginModel);
        @if (response.Status == true)
        {
            var user_response = response.Message.Split(",");
            await sessionStorage.SetAsync("adminKey", user_response[0]);
            await sessionStorage.SetAsync("adminName", user_response[1]);
            await sessionStorage.SetAsync("adminEmail", user_response[2]);
            await notify.InvokeAsync();
            Navmanger.NavigateTo("/");
        }
        else
        {
            alertMessage = response.Message;
        }

    }
}
