@page "/register"
@using Shop.Web.Services;
@using Shop.DataModels.CustomModels;
@inject IUserPanelService userPanelService
@inject ProtectedSessionStorage sessionStorage;
@inject NavigationManager navManager;
<h3>Register Page</h3>

<style>
    .loginBox {
        font-family: 'Open Sans',sans-serif;
        width: 100%;
        text-align: center;
        margin: 0 auto 0 auto;
        margin: 20px 0px 20px 0px;
    }

    p{
        font-size:12px;
        text-decoration:none;
        color:#ffffff;
    }

    h1{
         font-size:1.5em;
        color: #525252;
    }

    h2{
        font-size:5px;
        color:aqua;
    }

    .box 
    {
        background: white;
        width: 350px;
        border-radius:6px;
        margin:0 auto 0 auto;
        padding:0px 0px 70px 0px;
        border:#f5f542 4px solid;
        height:500px;
    }

    .email
    {
        border:#ccc 1px solid;
        border-bottom:#ccc 2px solid;
        padding: 8px;
        color: #525252;
        width:250px;
        background: #ffffff;
        margin-top: 10px;
        font-size:1em;
        border-radius:4px;
    }

    .password
    {
        border-radius:4px;
        background:#ecf0f1;
        border:#ccc 1px solid;
        padding:8px;
        width:250px;
        font-size:1em;
    }

    .btn{
        background:#2ecc71;
        width: 125px;
        padding-bottom: 5px;
        padding-top: 5px;
        color:white;
        border-radius:4px;
        border:#27ae60 1px solid;
        margin-top:20px;
        margin-bottom:20px;
        float:left;
        margin-left:16px;
        font-weight:800;
        font-size:0.8em;
    }

    .btn:hover{
        background:#2CC06B;
    }

    #btn2 {
        float: left;
        background: #3498db;
        width: 125px;
        padding-top: 5px;
        padding-bottom: 5px;
        color: white;
        border-radius: 4px;
        border: #2980b9 1px solid;
        margin-top: 20px;
        margin-bottom: 20px;
        margin-left: 10px;
        font-weight: 800;
        font-size: 0.8em;
    }

    #btn2:hover {
        background:#3594D2 ;
    }

      
</style>

<div style="min-height:400px;">
    <div class="loginBox">
        <div class="box">
            <h1>Register</h1>
            <EditForm Model="@registerModel" OnValidSubmit="Register_Click">
                <DataAnnotationsValidator />
                <InputText type="text" name="email" placeholder="Name" class="email" @bind-Value="registerModel.Name" autocomplete="off"></InputText>
                <ValidationMessage For="@(()=>registerModel.Name)"></ValidationMessage>
                <br />
                <InputText type="email" name="email" placeholder="Email" class="email" @bind-Value="registerModel.EmailId" autocomplete="off"></InputText>
                <ValidationMessage For="@(()=>registerModel.EmailId)"></ValidationMessage>
                <br />
                <InputText type="text" name="email" placeholder="MobileNumber" class="email" @bind-Value="registerModel.MobileNo" autocomplete="off"></InputText>
                <ValidationMessage For="@(()=>registerModel.MobileNo)"></ValidationMessage>
                <br />
                <InputText type="password" name="email" placeholder="Password" class="password" @bind-Value="registerModel.Password"></InputText>
                <ValidationMessage For="@(()=>registerModel.Password)"></ValidationMessage>
                <br />
                <input type="submit" class="btn" value="Register" @onclick="Register_Click"/>
                <a href="login"><div id="btn2">Login</div></a>
                @*<div class="form-row">
                    <div class="form-group col-5">
                        <label>Name:</label>
                        <InputText @bind-Value="categoryModel.Name" class="form-control" />
                        <ValidationMessage For="@(()=>categoryModel.Name)" />
                    </div>
                </div>
                <div class="text-left">
                    <input type="submit" class="btn btn-primary" value="Save" />
                    <input type="button" class="btn btn-primary" value="Clear" @onclick="ClearForm" />
                </div>*@

            </EditForm>

        </div>
    </div>
</div>

@code
{
    [CascadingParameter]
    public EventCallback notify { get; set; }
    public RegisterModel registerModel { get; set; }
    public string alertMessage { get; set; }

    protected override Task OnInitializedAsync()
    {
        registerModel = new RegisterModel();
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var login_session = await userPanelService.IsUserLoggedIn();
            if (login_session)
            {
                navManager.NavigateTo("/");
            }
            var checkout_session = await sessionStorage.GetAsync<string>("checkoutAlert");
            if (checkout_session.Success)
            {
                this.alertMessage = checkout_session.Value;
                StateHasChanged();
            }
        }
    }

    private async Task Register_Click()
    {
        var response = await userPanelService.RegisterUser(registerModel);
        if (response.Status)
        {
            var user_response = response.Message.Split("|");
            await sessionStorage.SetAsync("userKey", user_response[0]);
            await sessionStorage.SetAsync("userName", user_response[1]);
            await sessionStorage.SetAsync("userEmail", user_response[2]);
            await notify.InvokeAsync();navManager.NavigateTo("/");
        }
        else
        {
            alertMessage = response.Message;
        }
    }

}
